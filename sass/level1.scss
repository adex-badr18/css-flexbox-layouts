// define basic styles using variables 
$gap: 4vh;
$padding: 4vh;
$color: #48CAE4;

// define breakpoints
$bp: (
    mobile: 480px,
    tablet: 768px,
    desktop: 1440px,
);

// define media queries
@mixin query($display){
    @each $key, $value in $bp{
        // defining max-width
        @if ($display == $key){
            @media (max-width: $value){@content;}
        }
    }
}

// change the browser's default styles
*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;

    // Change the body styles
    body {
        width: 100%;
        min-height: 100vh;
        font-family: sans-serif;
        font-size: 45px;
    }
}

// Style rules for container class
.container {
    display: flex;

    // lay .block-* classes in a column
    flex-direction: column;

    // set gap between the .block-* classes
    gap: $gap;

    // set some padding and border
    padding: $padding;
    border: 1vh solid $color;
}




// Style rules for all .block-* classes
[class ^="block-"] {
    // lay the boxes in row
    display: flex;
    flex-direction: row;

    // Set the height of each block by removing border(1vh+1vh), gap and padding from the height and equally distributing spaces between the blocks by dividing it by 3.
    height: (100vh - 2vh - $gap * 2 - $padding * 2) / 3;

    // put gap between the boxes
    gap: $gap;

    @include query (mobile) {
        flex-direction: column;

        // set height of block
        height: 500px;
    }
}

// Style rules for all boxes
[class ^="box-"]{
    // Set the text at center for every box
    display: flex;
    justify-content: center;
    align-items: center;

    // Divide spaces among the boxes
    // flex-gap: 1;
    flex-grow: 1; // 1+1+1=3 => 1/3 x 100% = 33.33% each

    flex-basis: (100%)/3; // 33.33% each
    border: 2px solid black;
    border-radius: 10px;
    background-color: #c1c1c1;
}
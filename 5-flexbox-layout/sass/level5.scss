// define basic styles using variables 
$gap: 4vh;
$padding: 4vh;
$height: (100vh - $gap * 2 - $padding * 2) / 3;
$color: #48CAE4;

// define breakpoints
$bp: (
    mobile: 480px,
    tablet: 768px,
    desktop: 1440px,
);

// define media queries
@mixin query($display) {

    @each $key,
    $value in $bp {

        // defining max-width
        @if ($display ==$key) {
            @media (max-width: $value) {
                @content;
            }
        }
    }
}

// change the browser's default styles
* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;

    // Change the body styles
    body {
        width: 100%;
        min-height: 100vh;
        font-family: sans-serif;
        font-size: 45px;
    }
}

.container {
    display: flex;
    flex-direction: column;
    gap: $gap;
    padding: $padding;
}

[class ^="block-"] {
    display: flex;
    flex-direction: row;
    gap: $gap;
    // height: $height;
}

.block-2 {
    height: $height * 2;
}

[class ^="box-"] {
    display: flex;
    justify-content: center;
    align-items: center;

    border: 1vh solid $color;
    border-radius: 10px;
    background-color: #c1c1c1;
}

// Boxes A & E
.box-1, .box-5 {
    flex-basis: 100%;
    height: 20vh;
}

// Boxes B & D
.box-2, .box-4 {
    flex-basis: 20%;
}

// Box C
.box-3 {
    flex-basis: 60%;
    height: 60vh - $gap*2 - $padding * 2;
}

@include query(mobile) {
    .block-2 {
        flex-direction: column;
        height: 60vh;
    }

    // Hide box B
    .box-2 {
        display: none;
    }

    // Increase height of box C
    .box-3 {
        flex-basis: 80%;
    }
}
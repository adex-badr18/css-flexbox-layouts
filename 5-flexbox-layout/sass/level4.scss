// define basic styles using variables 
$gap: 4vh;
$padding: 4vh;
$color: #48CAE4;

// define breakpoints
$bp: (
    mobile: 480px,
    tablet: 768px,
    desktop: 1440px,
);

// define media queries
@mixin query($display) {

    @each $key,
    $value in $bp {

        // defining max-width
        @if ($display ==$key) {
            @media (max-width: $value) {
                @content;
            }
        }
    }
}

// change the browser's default styles
* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;

    // Change the body styles
    body {
        width: 100%;
        min-height: 100vh;
        font-family: sans-serif;
        font-size: 45px;
    }
}

.container {
    display: flex;
    flex-direction: column;
    padding: $padding;
    gap: $gap;
}

[class ^="block-"] {
    display: flex;
    flex-direction: row;
    gap: $gap;

    // Remove padding, gap and divide by 3
    height: (100vh - $gap *2 - $padding * 2) / 3;

    // Style rules for mobile display
    @include query(mobile) {
        flex-direction: column;
    }
}

[class ^="box-"] {
    // place letter at center
    display: flex;
    justify-content: center;
    align-items: center;

    // Border, border-radius and background-color
    border: 1vh solid $color;
    border-radius: 10px;
    background-color: #c1c1c1;
}

// A
.box-1 {
    flex-basis: 100%;
}

// B and D
.box-2, .box-5 {
    flex-basis: 70%
    // flex-grow: 7;
}

// E and C
.box-3, .box-4 {
    flex-basis: 30%;
    // flex-grow: 3;
}

// Style rules for mobile display
@include query(mobile) {
    .block-2 {
        height: (100vh * 2) / 3;
    }

    .block-3 {
        flex-direction: row;
    }

    // Select B, E, C, D
    .box-2, .box-3, .box-4, .box-5 {
        flex-basis: 50%;
    }
}